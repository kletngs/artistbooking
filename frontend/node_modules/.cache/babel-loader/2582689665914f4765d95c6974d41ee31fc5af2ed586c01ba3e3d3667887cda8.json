{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\pages\\\\Artists.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport './Artists.css'; // Import the CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Artists = () => {\n  _s();\n  const [artists, setArtists] = useState([]); // All artists fetched from the backend\n  const [filteredArtists, setFilteredArtists] = useState([]); // Artists after filtering\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n  const [darkMode, setDarkMode] = useState(false); // Dark mode state\n\n  // Fetch artists from the backend\n  useEffect(() => {\n    const fetchArtists = async () => {\n      try {\n        const response = await axios.get('/api/artists'); // Replace with your API endpoint\n        setArtists(response.data); // Set the fetched artists\n        setFilteredArtists(response.data); // Initialize filtered artists with all artists\n        setLoading(false); // Stop loading\n      } catch (err) {\n        var _err$response;\n        console.error('Error fetching artists:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n        setError('Failed to load artists. Please try again later.');\n        setLoading(false); // Stop loading on error\n      }\n    };\n    fetchArtists(); // Call the function to fetch artists\n  }, []);\n\n  // Toggle dark mode\n  useEffect(() => {\n    document.body.classList.toggle('dark-mode', darkMode);\n  }, [darkMode]);\n\n  // Filter artists based on the selected category\n  const filterArtists = category => {\n    if (category === 'all') {\n      setFilteredArtists(artists); // Show all artists\n    } else {\n      const filtered = artists.filter(artist => artist.category === category);\n      setFilteredArtists(filtered); // Show only artists in the selected category\n    }\n  };\n\n  // Render loading state with a spinner\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"loading-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"loading-spinner\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \"Loading artists...\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this);\n  }\n\n  // Render error state\n  if (error) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Get unique categories dynamically\n  const uniqueCategories = [...new Set(artists.map(artist => artist.category))];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"artists-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"dark-mode-toggle\",\n      onClick: () => setDarkMode(!darkMode),\n      children: darkMode ? 'Light Mode' : 'Dark Mode'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"artists-heading\",\n      children: \"\\u0423\\u0440\\u0430\\u043D \\u0431\\u04AF\\u0442\\u044D\\u044D\\u043B\\u0447\\u0438\\u0434\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"filter-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"category-filter\",\n        className: \"filter-label\",\n        children: \"Filter by Category:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"category-filter\",\n        onChange: e => filterArtists(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"all\",\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this), uniqueCategories.map(category => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: category,\n          children: [category.charAt(0).toUpperCase() + category.slice(1), \" \"]\n        }, category, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"artist-grid\",\n      children: filteredArtists.length > 0 ? filteredArtists.map(artist => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"artist-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: artist.profilePicture ? `http://localhost:5000${artist.profilePicture}` : '/default-avatar.png',\n          alt: `${artist.name}'s profile`,\n          onError: e => {\n            e.target.src = '/default-avatar.png'; // Fallback image\n          },\n          className: \"artist-image\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          children: artist.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Category:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 32\n          }, this), \" \", artist.category]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: artist.bio || 'No bio available.'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 29\n        }, this)]\n      }, artist._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-artists-message\",\n        children: \"No artists found.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 9\n  }, this);\n};\n_s(Artists, \"+VLeLYHc25UNHHcY4vwVijiobM8=\");\n_c = Artists;\nexport default Artists;\nvar _c;\n$RefreshReg$(_c, \"Artists\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","Artists","_s","artists","setArtists","filteredArtists","setFilteredArtists","loading","setLoading","error","setError","darkMode","setDarkMode","fetchArtists","response","get","data","err","_err$response","console","message","document","body","classList","toggle","filterArtists","category","filtered","filter","artist","className","children","fileName","_jsxFileName","lineNumber","columnNumber","uniqueCategories","Set","map","onClick","htmlFor","id","onChange","e","target","value","charAt","toUpperCase","slice","length","src","profilePicture","alt","name","onError","bio","_id","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/pages/Artists.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport './Artists.css'; // Import the CSS file\r\n\r\nconst Artists = () => {\r\n    const [artists, setArtists] = useState([]); // All artists fetched from the backend\r\n    const [filteredArtists, setFilteredArtists] = useState([]); // Artists after filtering\r\n    const [loading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    const [darkMode, setDarkMode] = useState(false); // Dark mode state\r\n\r\n    // Fetch artists from the backend\r\n    useEffect(() => {\r\n        const fetchArtists = async () => {\r\n            try {\r\n                const response = await axios.get('/api/artists'); // Replace with your API endpoint\r\n                setArtists(response.data); // Set the fetched artists\r\n                setFilteredArtists(response.data); // Initialize filtered artists with all artists\r\n                setLoading(false); // Stop loading\r\n            } catch (err) {\r\n                console.error('Error fetching artists:', err.response?.data || err.message);\r\n                setError('Failed to load artists. Please try again later.');\r\n                setLoading(false); // Stop loading on error\r\n            }\r\n        };\r\n\r\n        fetchArtists(); // Call the function to fetch artists\r\n    }, []);\r\n\r\n    // Toggle dark mode\r\n    useEffect(() => {\r\n        document.body.classList.toggle('dark-mode', darkMode);\r\n    }, [darkMode]);\r\n\r\n    // Filter artists based on the selected category\r\n    const filterArtists = (category) => {\r\n        if (category === 'all') {\r\n            setFilteredArtists(artists); // Show all artists\r\n        } else {\r\n            const filtered = artists.filter((artist) => artist.category === category);\r\n            setFilteredArtists(filtered); // Show only artists in the selected category\r\n        }\r\n    };\r\n\r\n    // Render loading state with a spinner\r\n    if (loading) {\r\n        return (\r\n            <p className=\"loading-message\">\r\n                <span className=\"loading-spinner\"></span>Loading artists...\r\n            </p>\r\n        );\r\n    }\r\n\r\n    // Render error state\r\n    if (error) {\r\n        return <p className=\"error-message\">{error}</p>;\r\n    }\r\n\r\n    // Get unique categories dynamically\r\n    const uniqueCategories = [...new Set(artists.map((artist) => artist.category))];\r\n\r\n    return (\r\n        <div className=\"artists-container\">\r\n            {/* Dark Mode Toggle */}\r\n            <button\r\n                className=\"dark-mode-toggle\"\r\n                onClick={() => setDarkMode(!darkMode)}\r\n            >\r\n                {darkMode ? 'Light Mode' : 'Dark Mode'}\r\n            </button>\r\n\r\n            {/* Heading */}\r\n            <h2 className=\"artists-heading\">Уран бүтээлчид</h2>\r\n\r\n            {/* Filter Dropdown */}\r\n            <div className=\"filter-container\">\r\n                <label htmlFor=\"category-filter\" className=\"filter-label\">\r\n                    Filter by Category:\r\n                </label>\r\n                <select id=\"category-filter\" onChange={(e) => filterArtists(e.target.value)}>\r\n                    <option value=\"all\">All</option>\r\n                    {uniqueCategories.map((category) => (\r\n                        <option key={category} value={category}>\r\n                            {category.charAt(0).toUpperCase() + category.slice(1)} {/* Capitalize first letter */}\r\n                        </option>\r\n                    ))}\r\n                </select>\r\n            </div>\r\n\r\n            {/* Artist Cards */}\r\n            <div className=\"artist-grid\">\r\n                {filteredArtists.length > 0 ? (\r\n                    filteredArtists.map((artist) => (\r\n                        <div key={artist._id} className=\"artist-card\">\r\n                            <img\r\n                                src={\r\n                                    artist.profilePicture\r\n                                        ? `http://localhost:5000${artist.profilePicture}`\r\n                                        : '/default-avatar.png'\r\n                                }\r\n                                alt={`${artist.name}'s profile`}\r\n                                onError={(e) => {\r\n                                    e.target.src = '/default-avatar.png'; // Fallback image\r\n                                }}\r\n                                className=\"artist-image\"\r\n                            />\r\n                            <h3>{artist.name}</h3>\r\n                            <p><strong>Category:</strong> {artist.category}</p>\r\n                            <p>{artist.bio || 'No bio available.'}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p className=\"no-artists-message\">No artists found.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Artists;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,eAAe,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAClB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5C,MAAM,CAACQ,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAC5D,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD;EACAD,SAAS,CAAC,MAAM;IACZ,MAAMiB,YAAY,GAAG,MAAAA,CAAA,KAAY;MAC7B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAMhB,KAAK,CAACiB,GAAG,CAAC,cAAc,CAAC,CAAC,CAAC;QAClDX,UAAU,CAACU,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QAC3BV,kBAAkB,CAACQ,QAAQ,CAACE,IAAI,CAAC,CAAC,CAAC;QACnCR,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB,CAAC,CAAC,OAAOS,GAAG,EAAE;QAAA,IAAAC,aAAA;QACVC,OAAO,CAACV,KAAK,CAAC,yBAAyB,EAAE,EAAAS,aAAA,GAAAD,GAAG,CAACH,QAAQ,cAAAI,aAAA,uBAAZA,aAAA,CAAcF,IAAI,KAAIC,GAAG,CAACG,OAAO,CAAC;QAC3EV,QAAQ,CAAC,iDAAiD,CAAC;QAC3DF,UAAU,CAAC,KAAK,CAAC,CAAC,CAAC;MACvB;IACJ,CAAC;IAEDK,YAAY,CAAC,CAAC,CAAC,CAAC;EACpB,CAAC,EAAE,EAAE,CAAC;;EAEN;EACAjB,SAAS,CAAC,MAAM;IACZyB,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,MAAM,CAAC,WAAW,EAAEb,QAAQ,CAAC;EACzD,CAAC,EAAE,CAACA,QAAQ,CAAC,CAAC;;EAEd;EACA,MAAMc,aAAa,GAAIC,QAAQ,IAAK;IAChC,IAAIA,QAAQ,KAAK,KAAK,EAAE;MACpBpB,kBAAkB,CAACH,OAAO,CAAC,CAAC,CAAC;IACjC,CAAC,MAAM;MACH,MAAMwB,QAAQ,GAAGxB,OAAO,CAACyB,MAAM,CAAEC,MAAM,IAAKA,MAAM,CAACH,QAAQ,KAAKA,QAAQ,CAAC;MACzEpB,kBAAkB,CAACqB,QAAQ,CAAC,CAAC,CAAC;IAClC;EACJ,CAAC;;EAED;EACA,IAAIpB,OAAO,EAAE;IACT,oBACIP,OAAA;MAAG8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC1B/B,OAAA;QAAM8B,SAAS,EAAC;MAAiB;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,sBAC7C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAEZ;;EAEA;EACA,IAAI1B,KAAK,EAAE;IACP,oBAAOT,OAAA;MAAG8B,SAAS,EAAC,eAAe;MAAAC,QAAA,EAAEtB;IAAK;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EACnD;;EAEA;EACA,MAAMC,gBAAgB,GAAG,CAAC,GAAG,IAAIC,GAAG,CAAClC,OAAO,CAACmC,GAAG,CAAET,MAAM,IAAKA,MAAM,CAACH,QAAQ,CAAC,CAAC,CAAC;EAE/E,oBACI1B,OAAA;IAAK8B,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAE9B/B,OAAA;MACI8B,SAAS,EAAC,kBAAkB;MAC5BS,OAAO,EAAEA,CAAA,KAAM3B,WAAW,CAAC,CAACD,QAAQ,CAAE;MAAAoB,QAAA,EAErCpB,QAAQ,GAAG,YAAY,GAAG;IAAW;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eAGTnC,OAAA;MAAI8B,SAAS,EAAC,iBAAiB;MAAAC,QAAA,EAAC;IAAc;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAGnDnC,OAAA;MAAK8B,SAAS,EAAC,kBAAkB;MAAAC,QAAA,gBAC7B/B,OAAA;QAAOwC,OAAO,EAAC,iBAAiB;QAACV,SAAS,EAAC,cAAc;QAAAC,QAAA,EAAC;MAE1D;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eACRnC,OAAA;QAAQyC,EAAE,EAAC,iBAAiB;QAACC,QAAQ,EAAGC,CAAC,IAAKlB,aAAa,CAACkB,CAAC,CAACC,MAAM,CAACC,KAAK,CAAE;QAAAd,QAAA,gBACxE/B,OAAA;UAAQ6C,KAAK,EAAC,KAAK;UAAAd,QAAA,EAAC;QAAG;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/BC,gBAAgB,CAACE,GAAG,CAAEZ,QAAQ,iBAC3B1B,OAAA;UAAuB6C,KAAK,EAAEnB,QAAS;UAAAK,QAAA,GAClCL,QAAQ,CAACoB,MAAM,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC,GAAGrB,QAAQ,CAACsB,KAAK,CAAC,CAAC,CAAC,EAAC,GAAC;QAAA,GAD9CtB,QAAQ;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAEb,CACX,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR,CAAC,eAGNnC,OAAA;MAAK8B,SAAS,EAAC,aAAa;MAAAC,QAAA,EACvB1B,eAAe,CAAC4C,MAAM,GAAG,CAAC,GACvB5C,eAAe,CAACiC,GAAG,CAAET,MAAM,iBACvB7B,OAAA;QAAsB8B,SAAS,EAAC,aAAa;QAAAC,QAAA,gBACzC/B,OAAA;UACIkD,GAAG,EACCrB,MAAM,CAACsB,cAAc,GACf,wBAAwBtB,MAAM,CAACsB,cAAc,EAAE,GAC/C,qBACT;UACDC,GAAG,EAAE,GAAGvB,MAAM,CAACwB,IAAI,YAAa;UAChCC,OAAO,EAAGX,CAAC,IAAK;YACZA,CAAC,CAACC,MAAM,CAACM,GAAG,GAAG,qBAAqB,CAAC,CAAC;UAC1C,CAAE;UACFpB,SAAS,EAAC;QAAc;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC3B,CAAC,eACFnC,OAAA;UAAA+B,QAAA,EAAKF,MAAM,CAACwB;QAAI;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACtBnC,OAAA;UAAA+B,QAAA,gBAAG/B,OAAA;YAAA+B,QAAA,EAAQ;UAAS;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACN,MAAM,CAACH,QAAQ;QAAA;UAAAM,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACnDnC,OAAA;UAAA+B,QAAA,EAAIF,MAAM,CAAC0B,GAAG,IAAI;QAAmB;UAAAvB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GAfpCN,MAAM,CAAC2B,GAAG;QAAAxB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAgBf,CACR,CAAC,gBAEFnC,OAAA;QAAG8B,SAAS,EAAC,oBAAoB;QAAAC,QAAA,EAAC;MAAiB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IACzD;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACjC,EAAA,CAjHID,OAAO;AAAAwD,EAAA,GAAPxD,OAAO;AAmHb,eAAeA,OAAO;AAAC,IAAAwD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}