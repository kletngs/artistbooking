{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  children,\n  isAdminOnly = false\n}) => {\n  _s();\n  const {\n    token,\n    user\n  } = useAuth();\n\n  // Redirect unauthenticated users to /login\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Redirect non-admins if isAdminOnly is true\n  if (isAdminOnly && !(user !== null && user !== void 0 && user.isAdmin)) {\n    console.log('Access denied: Only admins can access this route.');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\",\n      replace: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 16\n    }, this);\n  }\n  return children;\n};\n_s(PrivateRoute, \"+zyE3Xcn1J3q9V3LwWNHrSZwTD0=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","children","isAdminOnly","_s","token","user","to","replace","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","console","log","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ children, isAdminOnly = false }) => {\r\n    const { token, user } = useAuth();\r\n\r\n    // Redirect unauthenticated users to /login\r\n    if (!token) {\r\n        return <Navigate to=\"/login\" replace />;\r\n    }\r\n\r\n    // Redirect non-admins if isAdminOnly is true\r\n    if (isAdminOnly && !user?.isAdmin) {\r\n        console.log('Access denied: Only admins can access this route.');\r\n        return <Navigate to=\"/\" replace />;\r\n    }\r\n\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,QAAQ;EAAEC,WAAW,GAAG;AAAM,CAAC,KAAK;EAAAC,EAAA;EACxD,MAAM;IAAEC,KAAK;IAAEC;EAAK,CAAC,GAAGR,OAAO,CAAC,CAAC;;EAEjC;EACA,IAAI,CAACO,KAAK,EAAE;IACR,oBAAOL,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,QAAQ;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC3C;;EAEA;EACA,IAAIT,WAAW,IAAI,EAACG,IAAI,aAAJA,IAAI,eAAJA,IAAI,CAAEO,OAAO,GAAE;IAC/BC,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAChE,oBAAOf,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC,GAAG;MAACC,OAAO;IAAA;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACtC;EAEA,OAAOV,QAAQ;AACnB,CAAC;AAACE,EAAA,CAfIH,YAAY;EAAA,QACUH,OAAO;AAAA;AAAAkB,EAAA,GAD7Bf,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAe,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}