{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\pages\\\\ArtistLogin.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useContext } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { ThemeContext } from '../context/ThemeContext'; // Import ThemeContext\nimport './ArtistLogin.css'; // Import the external CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ArtistLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n  const {\n    login\n  } = useAuth(); // Use the login function from AuthContext\n  const navigate = useNavigate();\n  const {\n    darkMode\n  } = useContext(ThemeContext); // Access darkMode state\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      const response = await axios.post('/api/auth/artist/login', {\n        email,\n        password\n      });\n      const {\n        token,\n        artist\n      } = response.data;\n\n      // Save the token (e.g., in localStorage or context)\n      localStorage.setItem('token', token);\n\n      // Save the artist details (e.g., in context)\n      setArtist(artist); // Assuming you have a `setArtist` function in your context\n\n      // Redirect to the artist dashboard\n      navigate('/artist/dashboard');\n    } catch (err) {\n      var _err$response, _err$response2, _err$response2$data;\n      console.error('Error during login:', ((_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.data) || err.message);\n      setError(((_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : (_err$response2$data = _err$response2.data) === null || _err$response2$data === void 0 ? void 0 : _err$response2$data.message) || 'Login failed.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `login-container ${darkMode ? 'dark-mode' : ''}`,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"login-card\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"login-heading\",\n        children: \"Artist Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit,\n        className: \"login-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"email\",\n            className: \"input-label\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"email\",\n            id: \"email\",\n            placeholder: \"Enter your email\",\n            value: email,\n            onChange: e => setEmail(e.target.value),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"input-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: \"password\",\n            className: \"input-label\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            id: \"password\",\n            placeholder: \"Enter your password\",\n            value: password,\n            onChange: e => setPassword(e.target.value),\n            required: true,\n            className: \"input-field\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          className: \"login-button\",\n          children: \"Login as Artist\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"login-link\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/forgot-password\",\n          className: \"login-anchor\",\n          children: \"Forgot Password?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n_s(ArtistLogin, \"Q+pTxcVD+GLzZNOjZfQJgXYtg88=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = ArtistLogin;\nexport default ArtistLogin;\nvar _c;\n$RefreshReg$(_c, \"ArtistLogin\");","map":{"version":3,"names":["React","useState","useContext","axios","useNavigate","useAuth","ThemeContext","jsxDEV","_jsxDEV","ArtistLogin","_s","email","setEmail","password","setPassword","error","setError","login","navigate","darkMode","handleSubmit","e","preventDefault","response","post","token","artist","data","localStorage","setItem","setArtist","err","_err$response","_err$response2","_err$response2$data","console","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","htmlFor","type","id","placeholder","value","onChange","target","required","href","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/pages/ArtistLogin.js"],"sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\nimport { ThemeContext } from '../context/ThemeContext'; // Import ThemeContext\r\nimport './ArtistLogin.css'; // Import the external CSS file\r\n\r\nconst ArtistLogin = () => {\r\n    const [email, setEmail] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const [error, setError] = useState('');\r\n    const { login } = useAuth(); // Use the login function from AuthContext\r\n    const navigate = useNavigate();\r\n    const { darkMode } = useContext(ThemeContext); // Access darkMode state\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        try {\r\n            const response = await axios.post('/api/auth/artist/login', { email, password });\r\n            const { token, artist } = response.data;\r\n    \r\n            // Save the token (e.g., in localStorage or context)\r\n            localStorage.setItem('token', token);\r\n    \r\n            // Save the artist details (e.g., in context)\r\n            setArtist(artist); // Assuming you have a `setArtist` function in your context\r\n    \r\n            // Redirect to the artist dashboard\r\n            navigate('/artist/dashboard');\r\n        } catch (err) {\r\n            console.error('Error during login:', err.response?.data || err.message);\r\n            setError(err.response?.data?.message || 'Login failed.');\r\n        }\r\n    };\r\n    return (\r\n        <div className={`login-container ${darkMode ? 'dark-mode' : ''}`}>\r\n            <div className=\"login-card\">\r\n                <h2 className=\"login-heading\">Artist Login</h2>\r\n                {error && <p className=\"error-message\">{error}</p>}\r\n                <form onSubmit={handleSubmit} className=\"login-form\">\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"email\" className=\"input-label\">Email</label>\r\n                        <input\r\n                            type=\"email\"\r\n                            id=\"email\"\r\n                            placeholder=\"Enter your email\"\r\n                            value={email}\r\n                            onChange={(e) => setEmail(e.target.value)}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"input-group\">\r\n                        <label htmlFor=\"password\" className=\"input-label\">Password</label>\r\n                        <input\r\n                            type=\"password\"\r\n                            id=\"password\"\r\n                            placeholder=\"Enter your password\"\r\n                            value={password}\r\n                            onChange={(e) => setPassword(e.target.value)}\r\n                            required\r\n                            className=\"input-field\"\r\n                        />\r\n                    </div>\r\n                    <button type=\"submit\" className=\"login-button\">\r\n                        Login as Artist\r\n                    </button>\r\n                </form>\r\n                <div className=\"login-link\">\r\n                    <a href=\"/forgot-password\" className=\"login-anchor\">\r\n                        Forgot Password?\r\n                    </a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ArtistLogin;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}