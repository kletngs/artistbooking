{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\context\\\\ThemeContext.js\",\n  _s = $RefreshSig$();\nimport React, { createContext, useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nexport const ThemeProvider = ({\n  children\n}) => {\n  _s();\n  // Initialize dark mode state from localStorage or default to false\n  const [darkMode, setDarkMode] = useState(() => {\n    const savedMode = localStorage.getItem('darkMode');\n    return savedMode ? JSON.parse(savedMode) : false;\n  });\n\n  // Toggle dark mode and save the state to localStorage\n  const toggleDarkMode = () => {\n    const newMode = !darkMode;\n    setDarkMode(newMode);\n    localStorage.setItem('darkMode', JSON.stringify(newMode));\n  };\n\n  // Apply dark mode class to the body dynamically\n  useEffect(() => {\n    if (darkMode) {\n      document.body.classList.add('dark-mode');\n    } else {\n      document.body.classList.remove('dark-mode');\n    }\n  }, [darkMode]);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      darkMode,\n      toggleDarkMode\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 9\n  }, this);\n};\n_s(ThemeProvider, \"CMIk1D8KeJmsTLh1PWp29wLNMIo=\");\n_c = ThemeProvider;\nvar _c;\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","jsxDEV","_jsxDEV","ThemeContext","ThemeProvider","children","_s","darkMode","setDarkMode","savedMode","localStorage","getItem","JSON","parse","toggleDarkMode","newMode","setItem","stringify","document","body","classList","add","remove","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/context/ThemeContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect } from 'react';\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nexport const ThemeProvider = ({ children }) => {\r\n    // Initialize dark mode state from localStorage or default to false\r\n    const [darkMode, setDarkMode] = useState(() => {\r\n        const savedMode = localStorage.getItem('darkMode');\r\n        return savedMode ? JSON.parse(savedMode) : false;\r\n    });\r\n\r\n    // Toggle dark mode and save the state to localStorage\r\n    const toggleDarkMode = () => {\r\n        const newMode = !darkMode;\r\n        setDarkMode(newMode);\r\n        localStorage.setItem('darkMode', JSON.stringify(newMode));\r\n    };\r\n\r\n    // Apply dark mode class to the body dynamically\r\n    useEffect(() => {\r\n        if (darkMode) {\r\n            document.body.classList.add('dark-mode');\r\n        } else {\r\n            document.body.classList.remove('dark-mode');\r\n        }\r\n    }, [darkMode]);\r\n\r\n    return (\r\n        <ThemeContext.Provider value={{ darkMode, toggleDarkMode }}>\r\n            {children}\r\n        </ThemeContext.Provider>\r\n    );\r\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElE,OAAO,MAAMC,YAAY,gBAAGL,aAAa,CAAC,CAAC;AAE3C,OAAO,MAAMM,aAAa,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC3C;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,MAAM;IAC3C,MAAMU,SAAS,GAAGC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;IAClD,OAAOF,SAAS,GAAGG,IAAI,CAACC,KAAK,CAACJ,SAAS,CAAC,GAAG,KAAK;EACpD,CAAC,CAAC;;EAEF;EACA,MAAMK,cAAc,GAAGA,CAAA,KAAM;IACzB,MAAMC,OAAO,GAAG,CAACR,QAAQ;IACzBC,WAAW,CAACO,OAAO,CAAC;IACpBL,YAAY,CAACM,OAAO,CAAC,UAAU,EAAEJ,IAAI,CAACK,SAAS,CAACF,OAAO,CAAC,CAAC;EAC7D,CAAC;;EAED;EACAf,SAAS,CAAC,MAAM;IACZ,IAAIO,QAAQ,EAAE;MACVW,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,WAAW,CAAC;IAC5C,CAAC,MAAM;MACHH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,WAAW,CAAC;IAC/C;EACJ,CAAC,EAAE,CAACf,QAAQ,CAAC,CAAC;EAEd,oBACIL,OAAA,CAACC,YAAY,CAACoB,QAAQ;IAACC,KAAK,EAAE;MAAEjB,QAAQ;MAAEO;IAAe,CAAE;IAAAT,QAAA,EACtDA;EAAQ;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAEhC,CAAC;AAACtB,EAAA,CA5BWF,aAAa;AAAAyB,EAAA,GAAbzB,aAAa;AAAA,IAAAyB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}