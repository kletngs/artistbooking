{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useContext } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { AuthContext } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  isAdminOnly,\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useContext(AuthContext);\n\n  // If no user is logged in, redirect to login page\n  if (!user) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If the route requires admin access but the user is not an admin, redirect to user dashboard\n  if (isAdminOnly && !user.isAdmin) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Otherwise, render the protected component\n  return children;\n};\n_s(PrivateRoute, \"y3FQDew7UyrSqYkvQcTdCsLbAB8=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useContext","Navigate","AuthContext","jsxDEV","_jsxDEV","PrivateRoute","isAdminOnly","children","_s","user","to","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React, { useContext } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { AuthContext } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ isAdminOnly, children }) => {\r\n    const { user } = useContext(AuthContext);\r\n\r\n    // If no user is logged in, redirect to login page\r\n    if (!user) {\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // If the route requires admin access but the user is not an admin, redirect to user dashboard\r\n    if (isAdminOnly && !user.isAdmin) {\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    // Otherwise, render the protected component\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,WAAW,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM;IAAEC;EAAK,CAAC,GAAGT,UAAU,CAACE,WAAW,CAAC;;EAExC;EACA,IAAI,CAACO,IAAI,EAAE;IACP,oBAAOL,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,IAAIR,WAAW,IAAI,CAACG,IAAI,CAACM,OAAO,EAAE;IAC9B,oBAAOX,OAAA,CAACH,QAAQ;MAACS,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;;EAEA;EACA,OAAOP,QAAQ;AACnB,CAAC;AAACC,EAAA,CAfIH,YAAY;AAAAW,EAAA,GAAZX,YAAY;AAiBlB,eAAeA,YAAY;AAAC,IAAAW,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}