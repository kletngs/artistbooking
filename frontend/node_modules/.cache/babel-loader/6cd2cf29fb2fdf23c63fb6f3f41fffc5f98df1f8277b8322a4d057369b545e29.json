{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\slime\\\\react\\\\artistbooking\\\\frontend\\\\src\\\\components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Navigate } from 'react-router-dom';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PrivateRoute = ({\n  isAdminOnly,\n  children\n}) => {\n  _s();\n  const {\n    user\n  } = useAuth();\n\n  // If no user is logged in, redirect to login page\n  if (!user) {\n    console.log('No user logged in. Redirecting to /login...');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 16\n    }, this);\n  }\n\n  // If the route requires admin access but the user is not an admin, redirect to home page\n  if (isAdminOnly && !user.isAdmin) {\n    console.log('User is not an admin. Redirecting to /...');\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 16\n    }, this);\n  }\n\n  // Otherwise, render the protected component\n  console.log('Rendering protected component for user:', user.email);\n  return children;\n};\n_s(PrivateRoute, \"9ep4vdl3mBfipxjmc+tQCDhw6Ik=\", false, function () {\n  return [useAuth];\n});\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","Navigate","useAuth","jsxDEV","_jsxDEV","PrivateRoute","isAdminOnly","children","_s","user","console","log","to","fileName","_jsxFileName","lineNumber","columnNumber","isAdmin","email","_c","$RefreshReg$"],"sources":["C:/Users/slime/react/artistbooking/frontend/src/components/PrivateRoute.js"],"sourcesContent":["import React from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst PrivateRoute = ({ isAdminOnly, children }) => {\r\n    const { user } = useAuth();\r\n\r\n    // If no user is logged in, redirect to login page\r\n    if (!user) {\r\n        console.log('No user logged in. Redirecting to /login...');\r\n        return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // If the route requires admin access but the user is not an admin, redirect to home page\r\n    if (isAdminOnly && !user.isAdmin) {\r\n        console.log('User is not an admin. Redirecting to /...');\r\n        return <Navigate to=\"/\" />;\r\n    }\r\n\r\n    // Otherwise, render the protected component\r\n    console.log('Rendering protected component for user:', user.email);\r\n    return children;\r\n};\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,SAASC,OAAO,QAAQ,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEjD,MAAMC,YAAY,GAAGA,CAAC;EAAEC,WAAW;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAChD,MAAM;IAAEC;EAAK,CAAC,GAAGP,OAAO,CAAC,CAAC;;EAE1B;EACA,IAAI,CAACO,IAAI,EAAE;IACPC,OAAO,CAACC,GAAG,CAAC,6CAA6C,CAAC;IAC1D,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACnC;;EAEA;EACA,IAAIV,WAAW,IAAI,CAACG,IAAI,CAACQ,OAAO,EAAE;IAC9BP,OAAO,CAACC,GAAG,CAAC,2CAA2C,CAAC;IACxD,oBAAOP,OAAA,CAACH,QAAQ;MAACW,EAAE,EAAC;IAAG;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAC9B;;EAEA;EACAN,OAAO,CAACC,GAAG,CAAC,yCAAyC,EAAEF,IAAI,CAACS,KAAK,CAAC;EAClE,OAAOX,QAAQ;AACnB,CAAC;AAACC,EAAA,CAlBIH,YAAY;EAAA,QACGH,OAAO;AAAA;AAAAiB,EAAA,GADtBd,YAAY;AAoBlB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}